@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="he">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ניהול מערכת</title>
    <link rel="stylesheet" href="~/CSS/AdminPage.css">
    <style>
        .table-container {
            margin: 20px;
            overflow-x: auto;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
            background: linear-gradient(to right, #8e1899, #49124e);
            padding: 15px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            text-align: left;
            background-color: #fff;
            border-radius: 10px;
            overflow: hidden;
        }

        thead {
            background-color: #49124e;
            color: white;
            text-transform: uppercase;
            font-size: 14px;
        }

        th, td {
            padding: 15px;
            border-bottom: 1px solid #ddd;
        }

        button {
            padding: 10px 15px;
            font-size: 12px;
            background-color: #49124e;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-transform: uppercase;
        }

            button:hover {
                background-color: #6b1a74;
                transition: background-color 0.3s ease;
            }
    </style>
</head>
<body>
    <div class="table-container">
        <h2>רשימת ספרים</h2>
        <button onclick="addBook()">הוסף ספר חדש</button>
        <table>
            <thead>
                <tr>
                    <th>שם הספר</th>
                    <th>קטגוריה</th>
                    <th>זמינות</th>
                    <th>מחיר</th>
                    <th>פעולות</th>
                </tr>
            </thead>
            <tbody id="booksTable"></tbody>
        </table>
    </div>

    <div class="table-container">
        <h2>רשימת משתמשים</h2>
        <table>
            <thead>
                <tr>
                    <th>שם</th>
                    <th>אימייל</th>
                    <th>סוג משתמש</th>
                    <th>פעולות</th>
                </tr>
            </thead>
            <tbody id="usersTable"></tbody>
        </table>
    </div>

    <div class="table-container">
        <h2>רשימת המתנה</h2>
        <table>
            <thead>
                <tr>
                    <th>שם</th>
                    <th>שם הספר</th>
                    <th>תאריך</th>
                    <th>אימייל</th>
                    <th>פעולות</th>
                </tr>
            </thead>
            <tbody id="waitingTable"></tbody>
        </table>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            loadBooks();
            loadUsers();
            loadWaitingList();
        });

        async function loadBooks() {
            const response = await fetch('/Admin/GetBooksList');
            const books = await response.json();
            const booksTable = document.getElementById('booksTable');
            booksTable.innerHTML = '';
            books.forEach(book => {
                booksTable.innerHTML += `
                        <tr id="book-${book.book_id}">
                            <td>${book.book_name}</td>
                            <td>${book.category}</td>
                            <td>${book.available ? "זמין" : "לא זמין"}</td>
                            <td class="price-cell">${book.price}</td>
                            <td>
                                <button onclick="editBook(${book.book_id})">ערוך</button>
                                <button onclick="deleteBook(${book.book_id})">מחק</button>
                            </td>
                        </tr>
                    `;
            });
        }

        async function loadUsers() {
            const response = await fetch('/Admin/GetUsersList');
            const users = await response.json();
            const usersTable = document.getElementById('usersTable');
            usersTable.innerHTML = '';
            users.forEach(user => {
                usersTable.innerHTML += `
                        <tr>
                            <td>${user.name}</td>
                            <td>${user.email}</td>
                            <td>${user.type}</td>
                            <td>
                                <button onclick="deleteUser('${user.email}')">מחק</button>
                            </td>
                        </tr>
                    `;
            });
        }

        async function loadWaitingList() {
            const response = await fetch('/Admin/GetWaitingList');
            const waitingList = await response.json();
            const waitingTable = document.getElementById('waitingTable');
            waitingTable.innerHTML = '';
            waitingList.forEach(waiting => {
                waitingTable.innerHTML += `
                        <tr>
                            <td>${waiting.name}</td>
                            <td>${waiting.book_name}</td>
                            <td>${waiting.date}</td>
                            <td>${waiting.email}</td>
                            <td>
                                <button onclick="deleteFromWaitingList('${waiting.email}')">הסר</button>
                                <button onclick="sendEmail('${waiting.email}', 'מייל המתנה', 'שלום, הספר שלך זמין.')">שלח מייל</button>
                            </td>
                        </tr>
                    `;
            });
        }

        async function addBook() {
            const book = { book_name: "ספר חדש", category: "קטגוריה", available: true, price: 100 };
            const response = await fetch('/Admin/AddBook', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(book),
            });
            const result = await response.json();
            alert(result.message);
            loadBooks();
        }

        async function editBook(bookId) {
            const newPrice = prompt("הכנס מחיר חדש:");
            if (newPrice) {
                const response = await fetch('/Admin/EditBook', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ book_id: bookId, price: newPrice }),
                });
                const result = await response.json();
                alert(result.message);
                loadBooks();
            }
        }

        async function deleteBook(bookId) {
            const response = await fetch('/Admin/DeleteBook', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: bookId }),
            });
            const result = await response.json();
            alert(result.message);
            loadBooks();
        }

        async function deleteFromWaitingList(email) {
            const response = await fetch('/Admin/DeleteFromWaitingList', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email }),
            });
            const result = await response.json();
            alert(result.message);
            loadWaitingList();
        }

        async function sendEmail(email, subject, body) {
            const response = await fetch('/Admin/SendEmailToUser', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email, subject, body }),
            });
            const result = await response.json();
            alert(result.message);
        }
    </script>
</body>
</html>