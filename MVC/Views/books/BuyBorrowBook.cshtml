@{
    Layout = null; <!-- ביטול Layout כדי למנוע קונפליקטים -->
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Books List</title>
    <link rel="stylesheet" href="~/CSS/BuyBorrowBooks.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <!-- שדה חיפוש -->
    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Search for a book..." />
        <button onclick="searchBooks()">Search</button>
    </div>

    <div class="container">
        <h1>Books List</h1>
        <div id="booksContainer" class="books-list">
            @foreach (var book in Model)
            {
                <div class="book-item">
                    <!-- הצגת תמונת הספר -->
                    <img src="@book.ImageUrl" alt="@book.book_name" class="book-image">

                    <!-- פרטי הספר -->
                    <h2>@book.book_name</h2>
                    <p><strong>Author:</strong> @book.author</p>
                    <p><strong>Category:</strong> @book.category</p>
                    <p><strong>Language:</strong> @book.language</p>
                    <p><strong>Price:</strong> $@book.price</p>

                    <!-- כפתורי פעולה -->
                    <div class="actions">
                        @if (book.IsRent == null || book.IsRent)
                        {
                            <button class="rent-button" onclick="rentBook(@book.book_id)">Rent</button>
                            <span id="rentCount_@book.book_id">
                                @book.CurrentRentCount out of @book.MaxRentCount people have rented this book
                            </span>
                        }
                        <button class="buy-button" onclick="buyBook(@book.book_id)">Buy</button>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- אזור ה-JavaScript -->
    <script>
        // הוספת מאזין לאירוע input בשדה החיפוש
        document.getElementById("searchInput").addEventListener("input", function () {
            const query = this.value.trim();

            if (!query) {
                // אם השדה ריק, טוענים את כל הספרים מחדש
                $.get('/books/GetAllBooks', function (response) {
                    const booksContainer = document.getElementById("booksContainer");

                    // ניקוי התצוגה הקיימת
                    booksContainer.innerHTML = "";

                    // הצגת כל הספרים
                    response.forEach(book => {
                        booksContainer.innerHTML += `
                                    <div class="book-item">
                                        <img src="${book.ImageUrl}" alt="${book.book_name}" class="book-image">
                                        <h2>${book.book_name}</h2>
                                        <p><strong>Author:</strong> ${book.author}</p>
                                        <p><strong>Category:</strong> ${book.category}</p>
                                        <p><strong>Language:</strong> ${book.language}</p>
                                        <p><strong>Price:</strong> $${book.price}</p>
                                        <div class="actions">
                                            ${book.IsRent ? `<button class="rent-button" onclick="rentBook(${book.book_id})">Rent</button>` : ""}
                                            <span id="rentCount_${book.book_id}">
                                                ${book.CurrentRentCount} out of ${book.MaxRentCount} people have rented this book
                                            </span>
                                            <button class="buy-button" onclick="buyBook(${book.book_id})">Buy</button>
                                        </div>
                                    </div>`;
                    });
                });
            }
        });

        function searchBooks() {
            const query = document.getElementById("searchInput").value.trim();
            if (!query) {
                alert("Please enter a book name to search.");
                return;
            }

            // בקשה לשרת לחיפוש ספרים
            $.get('/books/SearchBooks', { query }, function (response) {
                const booksContainer = document.getElementById("booksContainer");

                // אם לא נמצאו ספרים
                if (!response.success) {
                    booksContainer.innerHTML = `<p>Unfortunately, the book does not exist in the system, but we will add it soon.</p>`;
                    return;
                }

                // הצגת הספרים שנמצאו
                booksContainer.innerHTML = ""; // ניקוי התוכן הקיים
                response.books.forEach(book => {
                    booksContainer.innerHTML += `
                                <div class="book-item">
                                    <img src="${book.ImageUrl}" alt="${book.book_name}" class="book-image">
                                    <h2>${book.book_name}</h2>
                                    <p><strong>Author:</strong> ${book.author}</p>
                                    <p><strong>Category:</strong> ${book.category}</p>
                                    <p><strong>Language:</strong> ${book.language}</p>
                                    <p><strong>Price:</strong> $${book.price}</p>
                                    <div class="actions">
                                        ${book.IsRent ? `<button class="rent-button" onclick="rentBook(${book.book_id})">Rent</button>` : ""}
                                        <span id="rentCount_${book.book_id}">
                                            ${book.CurrentRentCount} out of ${book.MaxRentCount} people have rented this book
                                        </span>
                                        <button class="buy-button" onclick="buyBook(${book.book_id})">Buy</button>
                                    </div>
                                </div>`;
                });
            });
        }

        function rentBook(bookId) {
            $.post('/books/RentBook', { book_id: bookId }, function (response) {
                if (response.success) {
                    const rentCountSpan = $(`#rentCount_${bookId}`);
                    const textParts = rentCountSpan.text().split(' ');
                    const currentCount = parseInt(textParts[0]) || 0;
                    rentCountSpan.text(`${currentCount + 1} out of ${textParts[2]} people have rented this book`);
                    alert(response.message);
                } else {
                    alert('Failed to rent the book: ' + response.message);
                }
            });
        }

        function buyBook(bookId) {
            $.post('/books/BuyBook', { book_id: bookId }, function (response) {
                alert(response.message);
            });
        }

        // פונקציה לבדוק אם המשתמש מחובר
            function isUserLoggedIn(callback) {
                $.get('/user/IsLoggedIn', function (response) {
                    callback(response.isLoggedIn);
                });
        }

        function rentBook(bookId) {
            isUserLoggedIn(function (isLoggedIn) {
                if (isLoggedIn) {
                    $.post('/books/RentBook', { book_id: bookId }, function (response) {
                        if (response.success) {
                            const rentCountSpan = $(`#rentCount_${bookId}`);
                            const textParts = rentCountSpan.text().split(' ');
                            const currentCount = parseInt(textParts[0]) || 0;
                            rentCountSpan.text(`${currentCount + 1} out of ${textParts[2]} people have rented this book`);
                            alert(response.message);
                            // הפנייה לעגלת הקניות
                            window.location.href = '/cart';
                        } else {
                            alert('Failed to rent the book: ' + response.message);
                        }
                    });
                } else {
                    alert('You must be logged in to rent a book.');
                    window.location.href = '/user/login'; // מעבר לעמוד התחברות
                }
            });
        }

        function buyBook(bookId) {
            isUserLoggedIn(function (isLoggedIn) {
                if (isLoggedIn) {
                    $.post('/books/BuyBook', { book_id: bookId }, function (response) {
                        if (response.success) {
                            alert(response.message);
                            // הפנייה לעגלת הקניות
                            window.location.href = '/cart';
                        } else {
                            alert('Failed to buy the book: ' + response.message);
                        }
                    });
                } else {
                    alert('You must be logged in to buy a book.');
                    window.location.href = '/user/login'; // מעבר לעמוד התחברות
                }
            });
        }

        }
    </script>
</body>
</html>